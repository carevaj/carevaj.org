import { merge } from "../core/utils/object.ts";
export const defaults = {
  names: {
    url: "url",
    htmlUrl: "htmlUrl"
  }
};
/**
 * A plugin to register the filters "url" and "htmlUrl"
 * for normalizing URLs in the templates
 */ export default function(userOptions) {
  const options = merge(defaults, userOptions);
  return (site)=>{
    site.filter(options.names.url, url);
    site.filter(options.names.htmlUrl, htmlUrl);
    function url(path = "/", absolute = false) {
      return typeof path === "string" ? site.url(path, absolute) : path;
    }
    function htmlUrl(html = "", absolute = false) {
      return html.replaceAll(/\s(href|src)="([^"]+)"/g, (_match, attr, value)=>` ${attr}="${url(value, absolute)}"`);
    }
  };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvbHVtZUB2Mi4yLjAvcGx1Z2lucy91cmwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVyZ2UgfSBmcm9tIFwiLi4vY29yZS91dGlscy9vYmplY3QudHNcIjtcblxuaW1wb3J0IHR5cGUgU2l0ZSBmcm9tIFwiLi4vY29yZS9zaXRlLnRzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3B0aW9ucyB7XG4gIC8qKiBUaGUgdXJsIGhlbHBlciBuYW1lICovXG4gIG5hbWVzPzoge1xuICAgIHVybD86IHN0cmluZztcbiAgICBodG1sVXJsPzogc3RyaW5nO1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgZGVmYXVsdHM6IE9wdGlvbnMgPSB7XG4gIG5hbWVzOiB7XG4gICAgdXJsOiBcInVybFwiLFxuICAgIGh0bWxVcmw6IFwiaHRtbFVybFwiLFxuICB9LFxufTtcblxuLyoqXG4gKiBBIHBsdWdpbiB0byByZWdpc3RlciB0aGUgZmlsdGVycyBcInVybFwiIGFuZCBcImh0bWxVcmxcIlxuICogZm9yIG5vcm1hbGl6aW5nIFVSTHMgaW4gdGhlIHRlbXBsYXRlc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAodXNlck9wdGlvbnM/OiBPcHRpb25zKSB7XG4gIGNvbnN0IG9wdGlvbnMgPSBtZXJnZShkZWZhdWx0cywgdXNlck9wdGlvbnMpO1xuXG4gIHJldHVybiAoc2l0ZTogU2l0ZSkgPT4ge1xuICAgIHNpdGUuZmlsdGVyKG9wdGlvbnMubmFtZXMudXJsISwgdXJsKTtcbiAgICBzaXRlLmZpbHRlcihvcHRpb25zLm5hbWVzLmh0bWxVcmwhLCBodG1sVXJsKTtcblxuICAgIGZ1bmN0aW9uIHVybChwYXRoID0gXCIvXCIsIGFic29sdXRlID0gZmFsc2UpOiBzdHJpbmcge1xuICAgICAgcmV0dXJuIHR5cGVvZiBwYXRoID09PSBcInN0cmluZ1wiID8gc2l0ZS51cmwocGF0aCwgYWJzb2x1dGUpIDogcGF0aDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBodG1sVXJsKGh0bWwgPSBcIlwiLCBhYnNvbHV0ZSA9IGZhbHNlKTogc3RyaW5nIHtcbiAgICAgIHJldHVybiBodG1sLnJlcGxhY2VBbGwoXG4gICAgICAgIC9cXHMoaHJlZnxzcmMpPVwiKFteXCJdKylcIi9nLFxuICAgICAgICAoX21hdGNoLCBhdHRyLCB2YWx1ZSkgPT4gYCAke2F0dHJ9PVwiJHt1cmwodmFsdWUsIGFic29sdXRlKX1cImAsXG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cblxuLyoqIEV4dGVuZHMgSGVscGVycyBpbnRlcmZhY2UgKi9cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgbmFtZXNwYWNlIEx1bWUge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgSGVscGVycyB7XG4gICAgICAvKiogQHNlZSBodHRwczovL2x1bWUubGFuZC9wbHVnaW5zL3VybC8jdXJsLWZpbHRlciAqL1xuICAgICAgdXJsOiAocGF0aDogc3RyaW5nLCBhYnNvbHV0ZT86IGJvb2xlYW4pID0+IHN0cmluZztcblxuICAgICAgLyoqIEBzZWUgaHR0cHM6Ly9sdW1lLmxhbmQvcGx1Z2lucy91cmwvI2h0bWx1cmwtZmlsdGVyICovXG4gICAgICBodG1sVXJsOiAoaHRtbDogc3RyaW5nLCBhYnNvbHV0ZT86IGJvb2xlYW4pID0+IHN0cmluZztcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLEtBQUssUUFBUSwwQkFBMEI7QUFZaEQsT0FBTyxNQUFNLFdBQW9CO0VBQy9CLE9BQU87SUFDTCxLQUFLO0lBQ0wsU0FBUztFQUNYO0FBQ0YsRUFBRTtBQUVGOzs7Q0FHQyxHQUNELGVBQWUsU0FBVSxXQUFxQjtFQUM1QyxNQUFNLFVBQVUsTUFBTSxVQUFVO0VBRWhDLE9BQU8sQ0FBQztJQUNOLEtBQUssTUFBTSxDQUFDLFFBQVEsS0FBSyxDQUFDLEdBQUcsRUFBRztJQUNoQyxLQUFLLE1BQU0sQ0FBQyxRQUFRLEtBQUssQ0FBQyxPQUFPLEVBQUc7SUFFcEMsU0FBUyxJQUFJLE9BQU8sR0FBRyxFQUFFLFdBQVcsS0FBSztNQUN2QyxPQUFPLE9BQU8sU0FBUyxXQUFXLEtBQUssR0FBRyxDQUFDLE1BQU0sWUFBWTtJQUMvRDtJQUVBLFNBQVMsUUFBUSxPQUFPLEVBQUUsRUFBRSxXQUFXLEtBQUs7TUFDMUMsT0FBTyxLQUFLLFVBQVUsQ0FDcEIsMkJBQ0EsQ0FBQyxRQUFRLE1BQU0sUUFBVSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxJQUFJLE9BQU8sVUFBVSxDQUFDLENBQUM7SUFFakU7RUFDRjtBQUNGIn0=