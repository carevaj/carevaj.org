import { Environment } from "./src/environment.ts";
import { FileLoader } from "./src/loader.ts";
import ifTag from "./plugins/if.ts";
import forTag from "./plugins/for.ts";
import includeTag from "./plugins/include.ts";
import setTag from "./plugins/set.ts";
import jsTag from "./plugins/js.ts";
import layoutTag from "./plugins/layout.ts";
import functionTag from "./plugins/function.ts";
import importTag from "./plugins/import.ts";
import exportTag from "./plugins/export.ts";
import echoTag from "./plugins/echo.ts";
import escape from "./plugins/escape.ts";
import unescape from "./plugins/unescape.ts";
import trim from "./plugins/trim.ts";
export default function(options = {}) {
  const loader = typeof options.includes === "object" ? options.includes : new FileLoader(options.includes || Deno.cwd());
  const env = new Environment({
    loader,
    dataVarname: options.dataVarname || "it",
    autoescape: options.autoescape ?? false,
    useWith: options.useWith ?? true
  });
  // Register basic plugins
  env.use(ifTag());
  env.use(forTag());
  env.use(jsTag());
  env.use(includeTag());
  env.use(setTag());
  env.use(layoutTag());
  env.use(functionTag());
  env.use(importTag());
  env.use(exportTag());
  env.use(echoTag());
  env.use(escape());
  env.use(unescape());
  env.use(trim());
  return env;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvdmVudG9AdjAuMTIuNS9tb2QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW52aXJvbm1lbnQgfSBmcm9tIFwiLi9zcmMvZW52aXJvbm1lbnQudHNcIjtcbmltcG9ydCB7IEZpbGVMb2FkZXIsIExvYWRlciB9IGZyb20gXCIuL3NyYy9sb2FkZXIudHNcIjtcbmltcG9ydCBpZlRhZyBmcm9tIFwiLi9wbHVnaW5zL2lmLnRzXCI7XG5pbXBvcnQgZm9yVGFnIGZyb20gXCIuL3BsdWdpbnMvZm9yLnRzXCI7XG5pbXBvcnQgaW5jbHVkZVRhZyBmcm9tIFwiLi9wbHVnaW5zL2luY2x1ZGUudHNcIjtcbmltcG9ydCBzZXRUYWcgZnJvbSBcIi4vcGx1Z2lucy9zZXQudHNcIjtcbmltcG9ydCBqc1RhZyBmcm9tIFwiLi9wbHVnaW5zL2pzLnRzXCI7XG5pbXBvcnQgbGF5b3V0VGFnIGZyb20gXCIuL3BsdWdpbnMvbGF5b3V0LnRzXCI7XG5pbXBvcnQgZnVuY3Rpb25UYWcgZnJvbSBcIi4vcGx1Z2lucy9mdW5jdGlvbi50c1wiO1xuaW1wb3J0IGltcG9ydFRhZyBmcm9tIFwiLi9wbHVnaW5zL2ltcG9ydC50c1wiO1xuaW1wb3J0IGV4cG9ydFRhZyBmcm9tIFwiLi9wbHVnaW5zL2V4cG9ydC50c1wiO1xuaW1wb3J0IGVjaG9UYWcgZnJvbSBcIi4vcGx1Z2lucy9lY2hvLnRzXCI7XG5pbXBvcnQgZXNjYXBlIGZyb20gXCIuL3BsdWdpbnMvZXNjYXBlLnRzXCI7XG5pbXBvcnQgdW5lc2NhcGUgZnJvbSBcIi4vcGx1Z2lucy91bmVzY2FwZS50c1wiO1xuaW1wb3J0IHRyaW0gZnJvbSBcIi4vcGx1Z2lucy90cmltLnRzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3B0aW9ucyB7XG4gIGluY2x1ZGVzPzogc3RyaW5nIHwgTG9hZGVyO1xuICAvKiogQGRlcHJlY2F0ZWQgKi9cbiAgdXNlV2l0aD86IGJvb2xlYW47XG4gIGRhdGFWYXJuYW1lPzogc3RyaW5nO1xuICBhdXRvZXNjYXBlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG9wdGlvbnM6IE9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBsb2FkZXIgPSB0eXBlb2Ygb3B0aW9ucy5pbmNsdWRlcyA9PT0gXCJvYmplY3RcIlxuICAgID8gb3B0aW9ucy5pbmNsdWRlc1xuICAgIDogbmV3IEZpbGVMb2FkZXIob3B0aW9ucy5pbmNsdWRlcyB8fCBEZW5vLmN3ZCgpKTtcblxuICBjb25zdCBlbnYgPSBuZXcgRW52aXJvbm1lbnQoe1xuICAgIGxvYWRlcixcbiAgICBkYXRhVmFybmFtZTogb3B0aW9ucy5kYXRhVmFybmFtZSB8fCBcIml0XCIsXG4gICAgYXV0b2VzY2FwZTogb3B0aW9ucy5hdXRvZXNjYXBlID8/IGZhbHNlLFxuICAgIHVzZVdpdGg6IG9wdGlvbnMudXNlV2l0aCA/PyB0cnVlLFxuICB9KTtcblxuICAvLyBSZWdpc3RlciBiYXNpYyBwbHVnaW5zXG4gIGVudi51c2UoaWZUYWcoKSk7XG4gIGVudi51c2UoZm9yVGFnKCkpO1xuICBlbnYudXNlKGpzVGFnKCkpO1xuICBlbnYudXNlKGluY2x1ZGVUYWcoKSk7XG4gIGVudi51c2Uoc2V0VGFnKCkpO1xuICBlbnYudXNlKGxheW91dFRhZygpKTtcbiAgZW52LnVzZShmdW5jdGlvblRhZygpKTtcbiAgZW52LnVzZShpbXBvcnRUYWcoKSk7XG4gIGVudi51c2UoZXhwb3J0VGFnKCkpO1xuICBlbnYudXNlKGVjaG9UYWcoKSk7XG4gIGVudi51c2UoZXNjYXBlKCkpO1xuICBlbnYudXNlKHVuZXNjYXBlKCkpO1xuICBlbnYudXNlKHRyaW0oKSk7XG5cbiAgcmV0dXJuIGVudjtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLFdBQVcsUUFBUSx1QkFBdUI7QUFDbkQsU0FBUyxVQUFVLFFBQWdCLGtCQUFrQjtBQUNyRCxPQUFPLFdBQVcsa0JBQWtCO0FBQ3BDLE9BQU8sWUFBWSxtQkFBbUI7QUFDdEMsT0FBTyxnQkFBZ0IsdUJBQXVCO0FBQzlDLE9BQU8sWUFBWSxtQkFBbUI7QUFDdEMsT0FBTyxXQUFXLGtCQUFrQjtBQUNwQyxPQUFPLGVBQWUsc0JBQXNCO0FBQzVDLE9BQU8saUJBQWlCLHdCQUF3QjtBQUNoRCxPQUFPLGVBQWUsc0JBQXNCO0FBQzVDLE9BQU8sZUFBZSxzQkFBc0I7QUFDNUMsT0FBTyxhQUFhLG9CQUFvQjtBQUN4QyxPQUFPLFlBQVksc0JBQXNCO0FBQ3pDLE9BQU8sY0FBYyx3QkFBd0I7QUFDN0MsT0FBTyxVQUFVLG9CQUFvQjtBQVVyQyxlQUFlLFNBQVUsVUFBbUIsQ0FBQyxDQUFDO0VBQzVDLE1BQU0sU0FBUyxPQUFPLFFBQVEsUUFBUSxLQUFLLFdBQ3ZDLFFBQVEsUUFBUSxHQUNoQixJQUFJLFdBQVcsUUFBUSxRQUFRLElBQUksS0FBSyxHQUFHO0VBRS9DLE1BQU0sTUFBTSxJQUFJLFlBQVk7SUFDMUI7SUFDQSxhQUFhLFFBQVEsV0FBVyxJQUFJO0lBQ3BDLFlBQVksUUFBUSxVQUFVLElBQUk7SUFDbEMsU0FBUyxRQUFRLE9BQU8sSUFBSTtFQUM5QjtFQUVBLHlCQUF5QjtFQUN6QixJQUFJLEdBQUcsQ0FBQztFQUNSLElBQUksR0FBRyxDQUFDO0VBQ1IsSUFBSSxHQUFHLENBQUM7RUFDUixJQUFJLEdBQUcsQ0FBQztFQUNSLElBQUksR0FBRyxDQUFDO0VBQ1IsSUFBSSxHQUFHLENBQUM7RUFDUixJQUFJLEdBQUcsQ0FBQztFQUNSLElBQUksR0FBRyxDQUFDO0VBQ1IsSUFBSSxHQUFHLENBQUM7RUFDUixJQUFJLEdBQUcsQ0FBQztFQUNSLElBQUksR0FBRyxDQUFDO0VBQ1IsSUFBSSxHQUFHLENBQUM7RUFDUixJQUFJLEdBQUcsQ0FBQztFQUVSLE9BQU87QUFDVCJ9