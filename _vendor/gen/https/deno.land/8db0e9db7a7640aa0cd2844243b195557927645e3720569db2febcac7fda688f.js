import Prism, { themesPath } from "../deps/prism.ts";
import { merge } from "../core/utils/object.ts";
// Default options
export const defaults = {
  extensions: [
    ".html"
  ],
  cssSelector: "pre code"
};
/** A plugin to syntax-highlight code using the prism library */ export default function(userOptions) {
  const options = merge(defaults, userOptions);
  return (site)=>{
    site.process(options.extensions, (pages)=>pages.forEach(prism));
    if (options.theme) {
      const themes = Array.isArray(options.theme) ? options.theme : [
        options.theme
      ];
      for (const { name, path } of themes){
        site.remoteFile(path, `${themesPath}prism-${name}.min.css`);
      }
    }
    function prism(page) {
      page.document.querySelectorAll(options.cssSelector).forEach((element)=>Prism.highlightElement(element));
    }
  };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvbHVtZUB2Mi4yLjAvcGx1Z2lucy9wcmlzbS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJpc20sIHsgdGhlbWVzUGF0aCB9IGZyb20gXCIuLi9kZXBzL3ByaXNtLnRzXCI7XG5pbXBvcnQgeyBtZXJnZSB9IGZyb20gXCIuLi9jb3JlL3V0aWxzL29iamVjdC50c1wiO1xuXG5pbXBvcnQgdHlwZSBTaXRlIGZyb20gXCIuLi9jb3JlL3NpdGUudHNcIjtcbmltcG9ydCB0eXBlIHsgUGFnZSB9IGZyb20gXCIuLi9jb3JlL2ZpbGUudHNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBPcHRpb25zIHtcbiAgLyoqIFRoZSBsaXN0IG9mIGV4dGVuc2lvbnMgdGhpcyBwbHVnaW4gYXBwbGllcyB0byAqL1xuICBleHRlbnNpb25zPzogc3RyaW5nW107XG5cbiAgLyoqIFRoZSBjc3Mgc2VsZWN0b3IgdG8gYXBwbHkgcHJpc20gKi9cbiAgY3NzU2VsZWN0b3I/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB0aGVtZSBvciB0aGVtZXMgdG8gZG93bmxvYWRcbiAgICogQHNlZSBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3ByaXNtanMvdGhlbWVzL1xuICAgKi9cbiAgdGhlbWU/OiBUaGVtZSB8IFRoZW1lW107XG59XG5cbmludGVyZmFjZSBUaGVtZSB7XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgdGhlbWUgKi9cbiAgbmFtZTogc3RyaW5nO1xuXG4gIC8qKiBUaGUgcGF0aCB0byB0aGUgdGhlbWUgZmlsZSAqL1xuICBwYXRoOiBzdHJpbmc7XG59XG5cbi8vIERlZmF1bHQgb3B0aW9uc1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRzOiBPcHRpb25zID0ge1xuICBleHRlbnNpb25zOiBbXCIuaHRtbFwiXSxcbiAgY3NzU2VsZWN0b3I6IFwicHJlIGNvZGVcIixcbn07XG5cbi8qKiBBIHBsdWdpbiB0byBzeW50YXgtaGlnaGxpZ2h0IGNvZGUgdXNpbmcgdGhlIHByaXNtIGxpYnJhcnkgKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh1c2VyT3B0aW9ucz86IE9wdGlvbnMpIHtcbiAgY29uc3Qgb3B0aW9ucyA9IG1lcmdlKGRlZmF1bHRzLCB1c2VyT3B0aW9ucyk7XG5cbiAgcmV0dXJuIChzaXRlOiBTaXRlKSA9PiB7XG4gICAgc2l0ZS5wcm9jZXNzKG9wdGlvbnMuZXh0ZW5zaW9ucywgKHBhZ2VzKSA9PiBwYWdlcy5mb3JFYWNoKHByaXNtKSk7XG5cbiAgICBpZiAob3B0aW9ucy50aGVtZSkge1xuICAgICAgY29uc3QgdGhlbWVzID0gQXJyYXkuaXNBcnJheShvcHRpb25zLnRoZW1lKVxuICAgICAgICA/IG9wdGlvbnMudGhlbWVcbiAgICAgICAgOiBbb3B0aW9ucy50aGVtZV07XG5cbiAgICAgIGZvciAoY29uc3QgeyBuYW1lLCBwYXRoIH0gb2YgdGhlbWVzKSB7XG4gICAgICAgIHNpdGUucmVtb3RlRmlsZShcbiAgICAgICAgICBwYXRoLFxuICAgICAgICAgIGAke3RoZW1lc1BhdGh9cHJpc20tJHtuYW1lfS5taW4uY3NzYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwcmlzbShwYWdlOiBQYWdlKSB7XG4gICAgICBwYWdlLmRvY3VtZW50IS5xdWVyeVNlbGVjdG9yQWxsKG9wdGlvbnMuY3NzU2VsZWN0b3IhKVxuICAgICAgICAuZm9yRWFjaCgoZWxlbWVudCkgPT4gUHJpc20uaGlnaGxpZ2h0RWxlbWVudChlbGVtZW50KSk7XG4gICAgfVxuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sU0FBUyxVQUFVLFFBQVEsbUJBQW1CO0FBQ3JELFNBQVMsS0FBSyxRQUFRLDBCQUEwQjtBQTJCaEQsa0JBQWtCO0FBQ2xCLE9BQU8sTUFBTSxXQUFvQjtFQUMvQixZQUFZO0lBQUM7R0FBUTtFQUNyQixhQUFhO0FBQ2YsRUFBRTtBQUVGLDhEQUE4RCxHQUM5RCxlQUFlLFNBQVUsV0FBcUI7RUFDNUMsTUFBTSxVQUFVLE1BQU0sVUFBVTtFQUVoQyxPQUFPLENBQUM7SUFDTixLQUFLLE9BQU8sQ0FBQyxRQUFRLFVBQVUsRUFBRSxDQUFDLFFBQVUsTUFBTSxPQUFPLENBQUM7SUFFMUQsSUFBSSxRQUFRLEtBQUssRUFBRTtNQUNqQixNQUFNLFNBQVMsTUFBTSxPQUFPLENBQUMsUUFBUSxLQUFLLElBQ3RDLFFBQVEsS0FBSyxHQUNiO1FBQUMsUUFBUSxLQUFLO09BQUM7TUFFbkIsS0FBSyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLE9BQVE7UUFDbkMsS0FBSyxVQUFVLENBQ2IsTUFDQSxDQUFDLEVBQUUsV0FBVyxNQUFNLEVBQUUsS0FBSyxRQUFRLENBQUM7TUFFeEM7SUFDRjtJQUVBLFNBQVMsTUFBTSxJQUFVO01BQ3ZCLEtBQUssUUFBUSxDQUFFLGdCQUFnQixDQUFDLFFBQVEsV0FBVyxFQUNoRCxPQUFPLENBQUMsQ0FBQyxVQUFZLE1BQU0sZ0JBQWdCLENBQUM7SUFDakQ7RUFDRjtBQUNGIn0=