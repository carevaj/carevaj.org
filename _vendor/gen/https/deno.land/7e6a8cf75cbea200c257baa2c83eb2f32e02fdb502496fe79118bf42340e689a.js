import Site from "./core/site.ts";
import url from "./plugins/url.ts";
import json from "./plugins/json.ts";
import markdown from "./plugins/markdown.ts";
import modules from "./plugins/modules.ts";
import vento from "./plugins/vento.ts";
import search from "./plugins/search.ts";
import paginate from "./plugins/paginate.ts";
import toml from "./plugins/toml.ts";
import yaml from "./plugins/yaml.ts";
import { getOptionsFromCli } from "./core/utils/cli_options.ts";
export default function lume(options = {}, pluginOptions = {}, cliOptions = true) {
  if (cliOptions) {
    getOptionsFromCli(options);
  }
  const site = new Site(options);
  // Ignore some files by the watcher
  site.options.watcher.ignore.push("/deno.lock");
  site.options.watcher.ignore.push("/node_modules/.deno");
  site.options.watcher.ignore.push("/.git");
  site.options.watcher.ignore.push((path)=>path.endsWith("/.DS_Store"));
  return site.ignore("node_modules").ignore("import_map.json").ignore("deno.json").ignore("deno.jsonc").ignore("deno.lock").mergeKey("tags", "stringArray").use(url(pluginOptions.url)).use(json(pluginOptions.json)).use(markdown(pluginOptions.markdown)).use(modules(pluginOptions.modules)).use(vento(pluginOptions.vento)).use(paginate(pluginOptions.paginate)).use(search(pluginOptions.search)).use(toml(pluginOptions.toml)).use(yaml(pluginOptions.yaml));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvbHVtZUB2Mi4yLjAvbW9kLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTaXRlIGZyb20gXCIuL2NvcmUvc2l0ZS50c1wiO1xuaW1wb3J0IHVybCwgeyBPcHRpb25zIGFzIFVybE9wdGlvbnMgfSBmcm9tIFwiLi9wbHVnaW5zL3VybC50c1wiO1xuaW1wb3J0IGpzb24sIHsgT3B0aW9ucyBhcyBKc29uT3B0aW9ucyB9IGZyb20gXCIuL3BsdWdpbnMvanNvbi50c1wiO1xuaW1wb3J0IG1hcmtkb3duLCB7IE9wdGlvbnMgYXMgTWFya2Rvd25PcHRpb25zIH0gZnJvbSBcIi4vcGx1Z2lucy9tYXJrZG93bi50c1wiO1xuaW1wb3J0IG1vZHVsZXMsIHsgT3B0aW9ucyBhcyBNb2R1bGVzT3B0aW9ucyB9IGZyb20gXCIuL3BsdWdpbnMvbW9kdWxlcy50c1wiO1xuaW1wb3J0IHZlbnRvLCB7IE9wdGlvbnMgYXMgVmVudG9PcHRpb25zIH0gZnJvbSBcIi4vcGx1Z2lucy92ZW50by50c1wiO1xuaW1wb3J0IHNlYXJjaCwgeyBPcHRpb25zIGFzIFNlYXJjaE9wdGlvbnMgfSBmcm9tIFwiLi9wbHVnaW5zL3NlYXJjaC50c1wiO1xuaW1wb3J0IHBhZ2luYXRlLCB7IE9wdGlvbnMgYXMgUGFnaW5hdGVPcHRpb25zIH0gZnJvbSBcIi4vcGx1Z2lucy9wYWdpbmF0ZS50c1wiO1xuaW1wb3J0IHRvbWwsIHsgT3B0aW9ucyBhcyBUb21sT3B0aW9ucyB9IGZyb20gXCIuL3BsdWdpbnMvdG9tbC50c1wiO1xuaW1wb3J0IHlhbWwsIHsgT3B0aW9ucyBhcyBZYW1sT3B0aW9ucyB9IGZyb20gXCIuL3BsdWdpbnMveWFtbC50c1wiO1xuXG5pbXBvcnQgdHlwZSB7IERlZXBQYXJ0aWFsIH0gZnJvbSBcIi4vY29yZS91dGlscy9vYmplY3QudHNcIjtcbmltcG9ydCB0eXBlIHsgU2l0ZU9wdGlvbnMgfSBmcm9tIFwiLi9jb3JlL3NpdGUudHNcIjtcbmltcG9ydCB7IGdldE9wdGlvbnNGcm9tQ2xpIH0gZnJvbSBcIi4vY29yZS91dGlscy9jbGlfb3B0aW9ucy50c1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBsdWdpbk9wdGlvbnMge1xuICB1cmw/OiBVcmxPcHRpb25zO1xuICBqc29uPzogSnNvbk9wdGlvbnM7XG4gIG1hcmtkb3duPzogTWFya2Rvd25PcHRpb25zO1xuICBtb2R1bGVzPzogTW9kdWxlc09wdGlvbnM7XG4gIHZlbnRvPzogVmVudG9PcHRpb25zO1xuICBzZWFyY2g/OiBTZWFyY2hPcHRpb25zO1xuICBwYWdpbmF0ZT86IFBhZ2luYXRlT3B0aW9ucztcbiAgdG9tbD86IFRvbWxPcHRpb25zO1xuICB5YW1sPzogWWFtbE9wdGlvbnM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGx1bWUoXG4gIG9wdGlvbnM6IERlZXBQYXJ0aWFsPFNpdGVPcHRpb25zPiA9IHt9LFxuICBwbHVnaW5PcHRpb25zOiBQbHVnaW5PcHRpb25zID0ge30sXG4gIGNsaU9wdGlvbnMgPSB0cnVlLFxuKTogU2l0ZSB7XG4gIGlmIChjbGlPcHRpb25zKSB7XG4gICAgZ2V0T3B0aW9uc0Zyb21DbGkob3B0aW9ucyk7XG4gIH1cblxuICBjb25zdCBzaXRlID0gbmV3IFNpdGUob3B0aW9ucyBhcyBQYXJ0aWFsPFNpdGVPcHRpb25zPik7XG5cbiAgLy8gSWdub3JlIHNvbWUgZmlsZXMgYnkgdGhlIHdhdGNoZXJcbiAgc2l0ZS5vcHRpb25zLndhdGNoZXIuaWdub3JlLnB1c2goXCIvZGVuby5sb2NrXCIpO1xuICBzaXRlLm9wdGlvbnMud2F0Y2hlci5pZ25vcmUucHVzaChcIi9ub2RlX21vZHVsZXMvLmRlbm9cIik7XG4gIHNpdGUub3B0aW9ucy53YXRjaGVyLmlnbm9yZS5wdXNoKFwiLy5naXRcIik7XG4gIHNpdGUub3B0aW9ucy53YXRjaGVyLmlnbm9yZS5wdXNoKChwYXRoKSA9PiBwYXRoLmVuZHNXaXRoKFwiLy5EU19TdG9yZVwiKSk7XG5cbiAgcmV0dXJuIHNpdGVcbiAgICAuaWdub3JlKFwibm9kZV9tb2R1bGVzXCIpXG4gICAgLmlnbm9yZShcImltcG9ydF9tYXAuanNvblwiKVxuICAgIC5pZ25vcmUoXCJkZW5vLmpzb25cIilcbiAgICAuaWdub3JlKFwiZGVuby5qc29uY1wiKVxuICAgIC5pZ25vcmUoXCJkZW5vLmxvY2tcIilcbiAgICAubWVyZ2VLZXkoXCJ0YWdzXCIsIFwic3RyaW5nQXJyYXlcIilcbiAgICAudXNlKHVybChwbHVnaW5PcHRpb25zLnVybCkpXG4gICAgLnVzZShqc29uKHBsdWdpbk9wdGlvbnMuanNvbikpXG4gICAgLnVzZShtYXJrZG93bihwbHVnaW5PcHRpb25zLm1hcmtkb3duKSlcbiAgICAudXNlKG1vZHVsZXMocGx1Z2luT3B0aW9ucy5tb2R1bGVzKSlcbiAgICAudXNlKHZlbnRvKHBsdWdpbk9wdGlvbnMudmVudG8pKVxuICAgIC51c2UocGFnaW5hdGUocGx1Z2luT3B0aW9ucy5wYWdpbmF0ZSkpXG4gICAgLnVzZShzZWFyY2gocGx1Z2luT3B0aW9ucy5zZWFyY2gpKVxuICAgIC51c2UodG9tbChwbHVnaW5PcHRpb25zLnRvbWwpKVxuICAgIC51c2UoeWFtbChwbHVnaW5PcHRpb25zLnlhbWwpKTtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFVBQVUsaUJBQWlCO0FBQ2xDLE9BQU8sU0FBb0MsbUJBQW1CO0FBQzlELE9BQU8sVUFBc0Msb0JBQW9CO0FBQ2pFLE9BQU8sY0FBOEMsd0JBQXdCO0FBQzdFLE9BQU8sYUFBNEMsdUJBQXVCO0FBQzFFLE9BQU8sV0FBd0MscUJBQXFCO0FBQ3BFLE9BQU8sWUFBMEMsc0JBQXNCO0FBQ3ZFLE9BQU8sY0FBOEMsd0JBQXdCO0FBQzdFLE9BQU8sVUFBc0Msb0JBQW9CO0FBQ2pFLE9BQU8sVUFBc0Msb0JBQW9CO0FBSWpFLFNBQVMsaUJBQWlCLFFBQVEsOEJBQThCO0FBY2hFLGVBQWUsU0FBUyxLQUN0QixVQUFvQyxDQUFDLENBQUMsRUFDdEMsZ0JBQStCLENBQUMsQ0FBQyxFQUNqQyxhQUFhLElBQUk7RUFFakIsSUFBSSxZQUFZO0lBQ2Qsa0JBQWtCO0VBQ3BCO0VBRUEsTUFBTSxPQUFPLElBQUksS0FBSztFQUV0QixtQ0FBbUM7RUFDbkMsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7RUFDakMsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7RUFDakMsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7RUFDakMsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFTLEtBQUssUUFBUSxDQUFDO0VBRXpELE9BQU8sS0FDSixNQUFNLENBQUMsZ0JBQ1AsTUFBTSxDQUFDLG1CQUNQLE1BQU0sQ0FBQyxhQUNQLE1BQU0sQ0FBQyxjQUNQLE1BQU0sQ0FBQyxhQUNQLFFBQVEsQ0FBQyxRQUFRLGVBQ2pCLEdBQUcsQ0FBQyxJQUFJLGNBQWMsR0FBRyxHQUN6QixHQUFHLENBQUMsS0FBSyxjQUFjLElBQUksR0FDM0IsR0FBRyxDQUFDLFNBQVMsY0FBYyxRQUFRLEdBQ25DLEdBQUcsQ0FBQyxRQUFRLGNBQWMsT0FBTyxHQUNqQyxHQUFHLENBQUMsTUFBTSxjQUFjLEtBQUssR0FDN0IsR0FBRyxDQUFDLFNBQVMsY0FBYyxRQUFRLEdBQ25DLEdBQUcsQ0FBQyxPQUFPLGNBQWMsTUFBTSxHQUMvQixHQUFHLENBQUMsS0FBSyxjQUFjLElBQUksR0FDM0IsR0FBRyxDQUFDLEtBQUssY0FBYyxJQUFJO0FBQ2hDIn0=