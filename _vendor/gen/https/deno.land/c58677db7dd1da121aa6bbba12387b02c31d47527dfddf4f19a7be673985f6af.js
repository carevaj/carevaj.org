import { Command } from "../command.ts";
import { UnknownCompletionCommandError } from "../_errors.ts";
/** Execute auto completion method of command and action. */ export class CompleteCommand extends Command {
  constructor(cmd){
    super();
    return this.description("Get completions for given action from given command.").noGlobals().arguments("<action:string> [command...:string]").action(async (_, action, ...commandNames)=>{
      let parent;
      const completeCommand = commandNames?.reduce((cmd, name)=>{
        parent = cmd;
        const childCmd = cmd.getCommand(name, false);
        if (!childCmd) {
          throw new UnknownCompletionCommandError(name, cmd.getCommands());
        }
        return childCmd;
      }, cmd || this.getMainCommand()) ?? (cmd || this.getMainCommand());
      const completion = completeCommand.getCompletion(action);
      const result = await completion?.complete(completeCommand, parent) ?? [];
      if (result?.length) {
        Deno.stdout.writeSync(new TextEncoder().encode(result.join("\n")));
      }
    }).reset();
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvY2xpZmZ5QHYwLjI1LjcvY29tbWFuZC9jb21wbGV0aW9ucy9jb21wbGV0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tYW5kIH0gZnJvbSBcIi4uL2NvbW1hbmQudHNcIjtcbmltcG9ydCB7IFVua25vd25Db21wbGV0aW9uQ29tbWFuZEVycm9yIH0gZnJvbSBcIi4uL19lcnJvcnMudHNcIjtcbmltcG9ydCB0eXBlIHsgQ29tcGxldGlvbiB9IGZyb20gXCIuLi90eXBlcy50c1wiO1xuXG4vKiogRXhlY3V0ZSBhdXRvIGNvbXBsZXRpb24gbWV0aG9kIG9mIGNvbW1hbmQgYW5kIGFjdGlvbi4gKi9cbmV4cG9ydCBjbGFzcyBDb21wbGV0ZUNvbW1hbmQgZXh0ZW5kcyBDb21tYW5kPFxuICB2b2lkLFxuICB2b2lkLFxuICB2b2lkLFxuICBbYWN0aW9uOiBzdHJpbmcsIC4uLmNvbW1hbmROYW1lczogQXJyYXk8c3RyaW5nPl1cbj4ge1xuICBwdWJsaWMgY29uc3RydWN0b3IoY21kPzogQ29tbWFuZCkge1xuICAgIHN1cGVyKCk7XG4gICAgcmV0dXJuIHRoaXNcbiAgICAgIC5kZXNjcmlwdGlvbihcbiAgICAgICAgXCJHZXQgY29tcGxldGlvbnMgZm9yIGdpdmVuIGFjdGlvbiBmcm9tIGdpdmVuIGNvbW1hbmQuXCIsXG4gICAgICApXG4gICAgICAubm9HbG9iYWxzKClcbiAgICAgIC5hcmd1bWVudHMoXCI8YWN0aW9uOnN0cmluZz4gW2NvbW1hbmQuLi46c3RyaW5nXVwiKVxuICAgICAgLmFjdGlvbihhc3luYyAoXywgYWN0aW9uOiBzdHJpbmcsIC4uLmNvbW1hbmROYW1lczogQXJyYXk8c3RyaW5nPikgPT4ge1xuICAgICAgICBsZXQgcGFyZW50OiBDb21tYW5kIHwgdW5kZWZpbmVkO1xuICAgICAgICBjb25zdCBjb21wbGV0ZUNvbW1hbmQ6IENvbW1hbmQgPSBjb21tYW5kTmFtZXNcbiAgICAgICAgICA/LnJlZHVjZSgoY21kOiBDb21tYW5kLCBuYW1lOiBzdHJpbmcpOiBDb21tYW5kID0+IHtcbiAgICAgICAgICAgIHBhcmVudCA9IGNtZDtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkQ21kOiBDb21tYW5kIHwgdW5kZWZpbmVkID0gY21kLmdldENvbW1hbmQobmFtZSwgZmFsc2UpO1xuICAgICAgICAgICAgaWYgKCFjaGlsZENtZCkge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgVW5rbm93bkNvbXBsZXRpb25Db21tYW5kRXJyb3IobmFtZSwgY21kLmdldENvbW1hbmRzKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNoaWxkQ21kO1xuICAgICAgICAgIH0sIGNtZCB8fCB0aGlzLmdldE1haW5Db21tYW5kKCkpID8/IChjbWQgfHwgdGhpcy5nZXRNYWluQ29tbWFuZCgpKTtcblxuICAgICAgICBjb25zdCBjb21wbGV0aW9uOiBDb21wbGV0aW9uIHwgdW5kZWZpbmVkID0gY29tcGxldGVDb21tYW5kXG4gICAgICAgICAgLmdldENvbXBsZXRpb24oYWN0aW9uKTtcbiAgICAgICAgY29uc3QgcmVzdWx0OiBBcnJheTxzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuPiA9XG4gICAgICAgICAgYXdhaXQgY29tcGxldGlvbj8uY29tcGxldGUoY29tcGxldGVDb21tYW5kLCBwYXJlbnQpID8/IFtdO1xuXG4gICAgICAgIGlmIChyZXN1bHQ/Lmxlbmd0aCkge1xuICAgICAgICAgIERlbm8uc3Rkb3V0LndyaXRlU3luYyhuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocmVzdWx0LmpvaW4oXCJcXG5cIikpKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5yZXNldCgpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxPQUFPLFFBQVEsZ0JBQWdCO0FBQ3hDLFNBQVMsNkJBQTZCLFFBQVEsZ0JBQWdCO0FBRzlELDBEQUEwRCxHQUMxRCxPQUFPLE1BQU0sd0JBQXdCO0VBTW5DLFlBQW1CLEdBQWEsQ0FBRTtJQUNoQyxLQUFLO0lBQ0wsT0FBTyxJQUFJLENBQ1IsV0FBVyxDQUNWLHdEQUVELFNBQVMsR0FDVCxTQUFTLENBQUMsdUNBQ1YsTUFBTSxDQUFDLE9BQU8sR0FBRyxRQUFnQixHQUFHO01BQ25DLElBQUk7TUFDSixNQUFNLGtCQUEyQixjQUM3QixPQUFPLENBQUMsS0FBYztRQUN0QixTQUFTO1FBQ1QsTUFBTSxXQUFnQyxJQUFJLFVBQVUsQ0FBQyxNQUFNO1FBQzNELElBQUksQ0FBQyxVQUFVO1VBQ2IsTUFBTSxJQUFJLDhCQUE4QixNQUFNLElBQUksV0FBVztRQUMvRDtRQUNBLE9BQU87TUFDVCxHQUFHLE9BQU8sSUFBSSxDQUFDLGNBQWMsT0FBTyxDQUFDLE9BQU8sSUFBSSxDQUFDLGNBQWMsRUFBRTtNQUVuRSxNQUFNLGFBQXFDLGdCQUN4QyxhQUFhLENBQUM7TUFDakIsTUFBTSxTQUNKLE1BQU0sWUFBWSxTQUFTLGlCQUFpQixXQUFXLEVBQUU7TUFFM0QsSUFBSSxRQUFRLFFBQVE7UUFDbEIsS0FBSyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksY0FBYyxNQUFNLENBQUMsT0FBTyxJQUFJLENBQUM7TUFDN0Q7SUFDRixHQUNDLEtBQUs7RUFDVjtBQUNGIn0=